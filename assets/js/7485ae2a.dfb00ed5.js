"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[852],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>b});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(n),b=a,f=u["".concat(l,".").concat(b)]||u[b]||d[b]||o;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2018:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:1},i="Get started",c={unversionedId:"get-started",id:"get-started",title:"Get started",description:"In this get started tutorial - we will learn how to install, setup and interact with contract api.",source:"@site/docs/get-started.md",sourceDirName:".",slug:"/get-started",permalink:"/ethcontracts-doc/docs/get-started",draft:!1,editUrl:"https://github.com/ujjwalguptaofficial/ethcontracts-doc/tree/main/docs/get-started.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Installation",permalink:"/ethcontracts-doc/docs/installation"}},l={},s=[{value:"Installation",id:"installation",level:2},{value:"Setup",id:"setup",level:2},{value:"ethers",id:"ethers",level:3},{value:"web3js",id:"web3js",level:3},{value:"ERC20 balance",id:"erc20-balance",level:2},{value:"ethers.js",id:"ethersjs",level:3},{value:"web3.js",id:"web3js-1",level:3}],p={toc:s};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"get-started"},"Get started"),(0,a.kt)("p",null,"In this get started tutorial - we will learn how to install, setup and interact with contract api. "),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"npm i @opweb3/ethcontracts\n")),(0,a.kt)("h2",{id:"setup"},"Setup"),(0,a.kt)("p",null,"You can use any ethereum library. Currently we support ethers and web3.js."),(0,a.kt)("h3",{id:"ethers"},"ethers"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'import { EthersClient } from "@opweb3/ethcontracts";\n')),(0,a.kt)("h3",{id:"web3js"},"web3js"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'import { Web3Client } from "@opweb3/ethcontracts";\n')),(0,a.kt)("h2",{id:"erc20-balance"},"ERC20 balance"),(0,a.kt)("p",null,"Let's see how we can get balance of an erc20 token."),(0,a.kt)("h3",{id:"ethersjs"},"ethers.js"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'import { EthersClient, ERC20 } from "@opweb3/ethcontracts";\nimport { providers } from "ethers"\n\n// create token with token address\nconst token = new ERC20("0x8f3cf7ad23cd3cadbd9735aff958023239c6a063");\n\n// create provider\nconst provider = new providers.JsonRpcProvider(\'https://polygon-rpc.com\');\n\n// initiate token with provider\nawait token.init(\n    new EthersClient(provider)\n);\n\n// call token balance api\n\nconst balance = await token.getBalance("0xd5D3F35Bdd08950CCFE0DeAb638F8B5498297076");\nconsole.log("balance", balance);\n')),(0,a.kt)("h3",{id:"web3js-1"},"web3.js"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'import { Web3Client, ERC20 } from "@opweb3/ethcontracts";\nimport Web3 from "web3";\n\n// create token with token address\nconst token = new ERC20("0x8f3cf7ad23cd3cadbd9735aff958023239c6a063");\n\n// create provider\nconst provider = new Web3.providers.HttpProvider(\'https://polygon-rpc.com\');\n\n// initiate token with provider\nawait token.init(\n    new Web3Client(provider)\n);\n\n// call token balance api\n\nconst balance = await token.getBalance("0xd5D3F35Bdd08950CCFE0DeAb638F8B5498297076");\nconsole.log("balance", balance);\n')))}d.isMDXComponent=!0}}]);