"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[4497],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>u});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=p(n),u=o,h=m["".concat(s,".").concat(u)]||m[u]||d[u]||r;return n?a.createElement(h,i(i({ref:t},l),{},{components:n})):a.createElement(h,i({ref:t},l))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6535:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>p});var a=n(7462),o=(n(7294),n(3905));const r={sidebar_position:5},i="Customization",c={unversionedId:"customization",id:"customization",title:"Customization",description:"EthContracts is very flexible and allows you to customize or extend as per your need.",source:"@site/docs/customization.md",sourceDirName:".",slug:"/customization",permalink:"/ethcontracts-doc/docs/customization",draft:!1,editUrl:"https://github.com/ujjwalguptaofficial/ethcontracts-doc/tree/main/docs/customization.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Transaction type",permalink:"/ethcontracts-doc/docs/concepts/transaction-type"},next:{title:"ABI management",permalink:"/ethcontracts-doc/docs/abi-management"}},s={},p=[{value:"Contracts have additional methods",id:"contracts-have-additional-methods",level:2},{value:"setABI",id:"setabi",level:3},{value:"Same contract name",id:"same-contract-name",level:4},{value:"Change Contract name",id:"change-contract-name",level:4}],l={toc:p};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"customization"},"Customization"),(0,o.kt)("p",null,"EthContracts is very flexible and allows you to customize or extend as per your need.   "),(0,o.kt)("p",null,"Let's see some example of different use cases - "),(0,o.kt)("h2",{id:"contracts-have-additional-methods"},"Contracts have additional methods"),(0,o.kt)("p",null,"Consider your ",(0,o.kt)("inlineCode",{parentName:"p"},"erc20")," contracts contains extra method ",(0,o.kt)("inlineCode",{parentName:"p"},"approveMax")," which approves max amount to spender. "),(0,o.kt)("p",null,"So we need to add this additional method to our ",(0,o.kt)("inlineCode",{parentName:"p"},"ERC20")," class. For this we will create another class - let's say ",(0,o.kt)("inlineCode",{parentName:"p"},"ERC20MyApp")," and extend the ",(0,o.kt)("inlineCode",{parentName:"p"},"ERC20")," class. And inside our new class we will add our additional method - ",(0,o.kt)("inlineCode",{parentName:"p"},"approveMax"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'import { ERC20 } from "@ethcontracts/core";\nclass ERC20MyApp extends ERC20{\n    constructor(tokenAddress:string){\n        super(tokenAddress);\n    }\n\n    approveMax(){\n        const method = this.contact.method("approveMax");\n        return this.processWrite(method);\n    }\n}\n')),(0,o.kt)("p",null,"We have successfully created the class but we need to also update the ABI now - as the abi stored does not have ",(0,o.kt)("inlineCode",{parentName:"p"},"approveMax")," method. "),(0,o.kt)("p",null,"In this case you can use ",(0,o.kt)("inlineCode",{parentName:"p"},"setABI")," of ",(0,o.kt)("a",{parentName:"p",href:"/docs/abi-management/"},"ABIManager")," to set the ABI and it will be automatically picked by the contracts implementation."),(0,o.kt)("p",null,"The contract name is treated as identifier, so you have the options of choosing same contract name or use your own contract name."),(0,o.kt)("h3",{id:"setabi"},"setABI"),(0,o.kt)("h4",{id:"same-contract-name"},"Same contract name"),(0,o.kt)("p",null,"ERC20 uses ",(0,o.kt)("inlineCode",{parentName:"p"},"erc20")," as contract name. So you can use the same name to set the ABI. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'import { ABIManager } from "@ethcontracts/core";\nawait ABIManager.setABI("erc20", abi);\n')),(0,o.kt)("h4",{id:"change-contract-name"},"Change Contract name"),(0,o.kt)("p",null,"You can choose your own contract name and avoid any issues with existing abi. This is recommended way when you are customizing the contracts."),(0,o.kt)("p",null,"Let's see we want to choose - ",(0,o.kt)("inlineCode",{parentName:"p"},"erc20_myapp")," as contract name."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'import { ABIManager } from "@ethcontracts/core";\nawait ABIManager.setABI("erc20_myapp", abi);\n')),(0,o.kt)("p",null,"now you need to also provide the name in your custom class. You can pass the contract name in second parameter of parent constructor using ",(0,o.kt)("inlineCode",{parentName:"p"},"super"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'import { ERC20 } from "@ethcontracts/core";\nclass ERC20MyApp extends ERC20 {\n\n    constructor(tokenAddress:string){\n        // provide contract name in super\n        super(tokenAddress, "erc20_myapp");\n    }\n\n    approveMax(){\n        const method = this.contact.method("approveMax");\n        return this.processWrite(method);\n    }\n}\n')),(0,o.kt)("p",null,"Here is how you use it - "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'import { ABIManager } from "@ethcontracts/core";\nawait ABIManager.setABI("erc20_myapp", abi);\n\nconst token =  new ERC20MyApp(<token address>);\n\n// make sure setABI is called before creating token.init\ntoken.init(<wallet provider>);\n')))}d.isMDXComponent=!0}}]);